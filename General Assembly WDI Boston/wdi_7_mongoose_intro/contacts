#!/usr/bin/env node

var util = require('util');
var program = require('commander');
var Contact = require('./lib/contacts.js');
var mongoose = require('./lib/mongoose-contacts.js');

var done = function(){
  mongoose.connection.close();
};

program.version('0.1.0');

program
  .command('init')
  .description('initialize the database')
  .action(function() {

  }).on('--help', function() {
    console.log('Example:');
    console.log();
    console.log('  $ contacts init');
  });

program
  .command('add <first name> <last name>')
  .description('add a user to the contacts database')
  .action(function(firstName, lastName) {
    var c = Contact.create({
      name: {
        first: firstName,
        last: lastName
      }
    });
    done();
  }).on('--help', function() {
    console.log('Example:');
    console.log();
    console.log('  $ contacts add Charlton Wilbur');
  });

program
  .command('find <field> <criterion>')
  .description('find contacts')
  .action(function(field, criterion) {
    var search = {};
    search[field] = criterion[0] === '/' ?
      new RegExp(criterion.slice(1, criterion.length-1)) :
      criterion;
    Contact.find(search).exec(function(err, contacts) {
      if (err) {
        console.log('search error');
        console.log(err);
        return;
      }
      contacts.forEach(function(contact){
        console.log(contact);
      });
      done();
    });
  }).on('--help', function() {
    console.log('Example:');
    console.log();
    console.log('  $ contacts find <field> <criterion>');
  });

program
  .command('update <search field> <criterion> <update field> <value>')
  .description('update contacts')
  .action(function(searchField, criterion, updateField, value) {
    var search = new Object();
    search[searchField] = criterion[0] === '/' ?
      new RegExp(criterion.slice(1, criterion.length-1)) :
      criterion;
      //{ name.first: /^[AaBb]/ }
    Contact.find(search).exec(function(err, contacts) {
      if (err) {
        console.log('search error');
        console.log(err);
        return;
      }
      contacts.forEach(function(contact) {
        console.log("Updating: " + contact._id);
        var up = {};
        up[updateField] = value;
        var query = Contact.update({ _id: contact._id}, up );
        query.exec();
      });
      setTimeout(done, 0);
    });
  }).on('--help', function() {
    console.log('Example:');
    console.log();
    console.log('  $ contacts update <search field> <criterion> <update field> <value>');
  });

program
  .command('rm <field> <criterion>')
  .description('rm contacts')
  .action(function(field, criterion) {
    var search = {};
    search[field] = criterion[0] === '/' ?
      new RegExp(criterion.slice(1, criterion.length-1)) :
      criterion;
      //{ name.first: /^[AaBb]/ }
    Contact.find(search).exec(function(err, contacts) {
      if (err) {
        console.log('search error');
        console.log(err);
        return;
      }
      contacts.forEach(function(contact) {
        console.log("Removing: " + contact._id);
        var query = Contact.remove({ _id: contact._id});
        query.exec();
      });
      setTimeout(done, 0);
    });
  }).on('--help', function() {
    console.log('Example:');
    console.log();
    console.log('  $ contacts rm <field> <criterion>');
  });

var testData = ['node',
  '/Users/cwilbur/Development/wdi_7_mongoose_intro/contacts',
  'add',
  '--first-name',
  'Charlton',
  '--last-name',
  'Wilbur'
];

program.parse(process.argv);
